import re  #finds word patterns. It is a library (and also a class). Pandas is a way to process data especially excel files/tables. 
#Within Pandas, you need different functions, join tables together(.join), import files(pandas.import), delete files(pandas.delete)
from playwright.sync_api import Page, expect

def test_xss_vulnerability(page: Page):
    page.goto("https://google-gruyere.appspot.com/start")

    # Function for clicking
    def clicker(clicked):
        result = page.get_by_text(clicked)
        result.click()
        print('done')
        page.wait_for_timeout(5000)

    # Agree/Start and signup button
    clicker("Agree & Start")
    clicker("Sign up")

    #Function for typing
    def typing(xpath,content):
        result = page.locator(xpath)
        result.fill(content)
        print('done')
        page.wait_for_timeout(5000)
        
    #Typing in username and password
    typing('body > div.content > form > table > tbody > tr:nth-child(1) > td:nth-child(2) > input[type=text]',"your_username")
    typing('body > div.content > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=password]',"password")

    #Account button and sign in
    clicker("Create account")
    clicker("Sign in")

    #Typing in username and password again
    typing('body > div.content > form > table > tbody > tr:nth-child(1) > td:nth-child(2) > input[type=text]',"your_username")
    typing('body > div.content > form > table > tbody > tr:nth-child(2) > td:nth-child(2) > input[type=password]',"password")

    #Clicking login (use of page.locator due to existence of 2 elements with same name) Create a new function (that can also be used by upload button)
    def location(xpath):
        result = page.locator(xpath)
        result.click()
        print('done')
        page.wait_for_timeout(5000)
        
    location('body > div.content > form > table > tbody > tr:nth-child(3) > td:nth-child(2) > input[type=submit]')
    

    #Upload button (using clicker function)
    clicker("Upload")

    #Choosing file- no function defined as .set_input_files is unique 
    input_field = page.locator('body > div.content > div > form > table > tbody > tr:nth-child(1) > td > input[type=file]') 
    input_field.set_input_files('payload.html')  #this file contains the html script which exploits the vulnerability
    print('done')
    page.wait_for_timeout(5000)

    #Upload button- location function used
    location('body > div.content > div > form > table > tbody >    tr:nth-child(2) > td > input[type=submit]')

    new_link = page.locator('body > div.content').text_content()
    link  = re.search('https(.*)html', new_link).group()
    print(link)

    page.goto(link)
    page.wait_for_timeout(5000)








